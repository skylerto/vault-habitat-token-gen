WHITE="example.key"
BLUE="$(printf '\033[1;46m\033[1;37m')"
NO_COLOR="$(printf '\033[0m')"

hab pkg install -bf core/busybox-static
hab pkg install -bf core/vault
hab pkg install -bf core/curl

VAULT_ADDR="https://127.0.0.1:8200"
VAULT_INIT="/vault.init"
export VAULT_SKIP_VERIFY="true"

build() {
  hab pkg install -bf core/git
  hab pkg install -bf core/go
  go get github.com/hashicorp/vault/helper/pluginutil
  go get github.com/hashicorp/vault/logical/plugin
  go get github.com/hashicorp/go-hclog
  go get github.com/skylerto/vault-habitat-token-gen/habtoken
  go build -o vault-habitat-token-gen
}

wait_for_supervisor() {
  until hab svc status > /dev/null 2>&1; do
    sleep 1
  done
}

start_vault() {
  if [ -f /vault.pid ]; then
    echo "vault started, run stop_vault first"
  else
    # vault server -dev-listen-address=172.17.0.2:8200 -dev -config=/src/config.hcl > /vault.logs 2>&1 &
    vault server -config=/src/config.hcl > /vault.logs 2>&1 &
    PID=$(ps aux | grep "vault server" | grep -v "grep" | awk '{print $1}')
    echo "${PID}" > /vault.pid
    sleep 2
    unseal
  fi
}

unseal() {
  vault operator init -address ${VAULT_ADDR} | tee ${VAULT_INIT} > /dev/null
  cat ${VAULT_INIT} | grep '^Unseal' | awk '{print $4}' | for key in $(cat -); do
    vault operator unseal -address ${VAULT_ADDR} "$key"
    COUNTER=$((COUNTER + 1))
  done
}

stop_vault() {
  if [ -f /vault.pid ]; then
    kill -9 $(cat /vault.pid) > /dev/null 2>&1
    rm /vault.pid > /dev/null 2>&1
    rm /vault.logs > /dev/null 2>&1
    rm /vault.init > /dev/null 2>&1
    rm -rf /vault > /dev/null 2>&1
  fi
}

logs() {
  cat /vault.logs
}

root_token() {
  cat /vault.init | grep "Root Token" | awk '{print $4}'
}

variables() {
  echo "export VAULT_ADDR='https://127.0.0.1:8200'"
  echo "export VAULT_TOKEN=$(root_token)"
}

add_catalog() {
  eval $(variables)
  sum=$(sha256sum vault-habitat-token-gen | awk '{print $1}')
  vault write sys/plugins/catalog/secret/habitattoken \
    sha256=${sum} \
    command="vault-habitat-token-gen"
}

enable() {
  eval $(variables)
  vault secrets enable -path=habitattoken -plugin-name="habitattoken" plugin
  # vault secrets enable -path=habitattoken -plugin-name="habitattoken" vault-habitat-token-gen
}

test() {
  local current=${1}
  eval $(variables)
  runcmd "vault write habitattoken/rotate current=${current} hab_bldr_url=https://bldr.habitat.sh"
}

runcmd() {
  echo -e "${WHITE}$@${NO_COLOR}"

  $@
}

help() {
  cat <<HELP
$BLUE
Welcome to the Vault Habitat Token Studio

The following commands are available in addition to the regular studio commands:

1. Vault
  * start_vault - Starts a local vault
  * root_token - fetches the vault root token
  * variables - return the shell variables required to talk to vault
2. Help
  * help - This message$NO_COLOR

Test it out: vault write habitattoken/rotate current=foo


HELP
}

help
start_vault
add_catalog
enable
