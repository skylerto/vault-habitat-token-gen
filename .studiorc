WHITE="$(printf '\033[1;37m')"
BLUE="$(printf '\033[1;46m\033[1;37m')"
NO_COLOR="$(printf '\033[0m')"

hab pkg install -bf core/busybox-static
hab pkg install -bf core/vault
hab pkg install -bf core/curl

build() {
  hab pkg install -bf core/git
  hab pkg install -bf core/go
  go get github.com/hashicorp/vault/helper/pluginutil
  go get github.com/hashicorp/vault/logical/plugin
  go get github.com/hashicorp/go-hclog
  go get github.com/skylerto/vault-habitat-token-gen/habtoken
  go build -o vault-habitat-token-gen
}

wait_for_supervisor() {
  until hab svc status > /dev/null 2>&1; do
    sleep 1
  done
}

start_vault() {
  vault server -dev-listen-address=0.0.0.0:8200 -dev -config=/src/config.hcl > /vault.logs 2>&1 &
  PID=$(ps aux | grep "vault server" | grep -v "grep" | awk '{print $1}')
  echo "${PID}" > /vault.pid
}

root_token() {
  cat /vault.logs | grep "Root Token" | awk '{print $3}'
}

variables() {
  echo "export VAULT_ADDR='http://127.0.0.1:8200'"
  echo "export VAULT_TOKEN=$(root_token)"
}

add_catalog() {
  eval $(variables)
  sum=$(sha256sum vault-habitat-token-gen | awk '{print $1}')
  vault write sys/plugins/catalog/secret/vault-habitat-token-gen \
    sha256=${sum} \
    command="vault-habitat-token-gen"
}

enable() {
  eval $(variables)
  vault secrets enable -path=vault-habitat-token-gen vault-habitat-token-gen
}

runcmd() {
  echo -e "${WHITE}$@${NO_COLOR}"

  $@
}

help() {
  cat <<HELP
$BLUE
Welcome to the Vault Habitat Token Studio

The following commands are available in addition to the regular studio commands:

1. Vault
  * start_vault - Starts a local vault
  * root_token - fetches the vault root token
  * variables - return the shell variables required to talk to vault
2. Help
  * help - This message$NO_COLOR

Test it out: vault write vault-habitat-token-gen/rotate current=foo


HELP
}

help
